openapi: '3.0.0'
info:
    version: 0.0.2
    title: restify_waterline_scaffold API
    description: Simple user+auth scaffold using TypeORM, Restify and Redis
    termsOfService: null
    license:
        name: (Apache-2.0 OR MIT)
        url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
    /users:
        get:
            description: |
                Returns all users from the system that the user has access to
            operationId: findUsers
            parameters:
                - name: x-access-token
                  in: header
                  description: access token to be passed as a header
                  required: true
                  schema:
                      type: string
                - name: role
                  in: query
                  description: 'role to filter by, e.g.: ophthalmologist'
                  required: false
                  style: form
                  schema:
                      type: array
                      items:
                          type: string
                - name: limit
                  in: query
                  description: maximum number of results to return
                  required: false
                  schema:
                      type: integer
                      format: int32
            responses:
                '200':
                    description: user response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            description: Register a new.  Duplicates are not allowed
            operationId: registerUser
            requestBody:
                description: User to add to the store
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                '200':
                    description: User response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /users/{username}:
        get:
            description: 'Returns a user based on a single ID, if the user has access to the user at username and user at ID exists'
            operationId: find user by id
            parameters:
                - name: x-access-token
                  in: header
                  description: access token to be passed as a header
                  required: true
                  schema:
                      type: string

                - name: username
                  in: path
                  description: username of user to fetch
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: user response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            description: deletes a user based on the ID supplied (only used for test cleanup)
            operationId: deleteUser
            parameters:
                - name: x-access-token
                  in: header
                  description: access token to be passed as a header
                  required: true
                  schema:
                      type: string

                - name: username
                  in: path
                  description: ID of user to delete
                  required: true
                  schema:
                      type: string
            responses:
                '204':
                    description: user deleted
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /auth:
        get:
            description: |
                Returns user associated with access token (or expiry details for current key?)
            operationId: checkAuth
            parameters:
                - name: x-access-token
                  in: header
                  description: access token to be passed as a header
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: user response
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/User'
                '403':
                    description: access token invalid
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '404':
                    description: user or access token not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            description: Login a user.  Duplicates are allowed
            operationId: loginUser
            requestBody:
                description: User to authenticate
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/User'
            responses:
                '200':
                    description: User response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            description: logout a user
            operationId: logoutUser
            parameters:
                - name: x-access-token
                  in: header
                  description: access token to be passed as a header
                  required: true
                  schema:
                      type: string
            responses:
                '204':
                    description: user logged ut
                default:
                    description: unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
components:
    schemas:
        User:
            allOf:
                - $ref: '#/components/schemas/NewUser'
                - type: object
                  required:
                      - username
                  properties:
                      username:
                          type: string

        NewUser:
            type: object
            required:
                - username
                - email
                - password
            properties:
                username: # Need username not just email field for hiding bias of known email
                    type: string
                email:
                    type: string
                role:
                    type: array
                    items:
                        type: string
                tag:
                    type: string
